
step.stmodel
============

.. py:module:: step.stmodel


Overview
--------

.. list-table:: Classes
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`stModel <step.stmodel.stModel>`
     - stModel is the main class for spatial transcriptomics data.




Classes
-------

.. py:class:: stModel(adata: Optional[anndata.AnnData] = None, file_path: Optional[str] = None, n_top_genes: Optional[int] = 2000, geneset_to_use: Optional[Sequence[str]] = None, batch_key: Optional[str] = None, layer_key: Optional[str] = None, coord_keys: Tuple[str, str] = ('array_row', 'array_col'), log_transformed=False, module_dim=30, decoder_input_dim=None, hidden_dim=64, n_modules=32, model_checkpoint=None, edge_clip=2, logarithm_first=False, variational=True, n_glayers=4, hvg_method='seurat_v3', filtered=False, dispersion='gene', device=None, **kwargs)

   stModel is the main class for spatial transcriptomics data.

   .. attribute:: adata

      Annotated data object containing the gene expression data.

   .. attribute:: dataset

      StDataset object.

   .. attribute:: _functional

      stSmoother object.

   Initialize the stModel object.

   :param adata: Annotated data matrix with shape (n_obs, n_vars). If provided, it will be used to create the StDataset.
   :type adata: Optional[AnnData]
   :param file_path: Path to the adata file. If provided, it will be used to create the StDataset.
   :type file_path: Optional[str]
   :param n_top_genes: Number of top genes to select. Default is 2000.
   :type n_top_genes: Optional[int]
   :param geneset_to_use: List of genes to use. Default is None.
   :type geneset_to_use: Optional[Sequence[str]]
   :param batch_key: Key for batch information in adata.obs. Default is None.
   :type batch_key: Optional[str]
   :param layer_key: Key for layer information in adata.layers. Default is None.
   :type layer_key: Optional[str]
   :param coord_keys: Keys for spatial coordinates in adata.obsm. Default is ('array_row', 'array_col').
   :type coord_keys: Tuple[str, str]
   :param log_transformed: Whether the gene expression values are log-transformed. Default is False.
   :type log_transformed: bool
   :param module_dim: Dimensionality of the modules. Default is 30.
   :type module_dim: int
   :param decoder_input_dim: Dimensionality of the decoder input. If None, it will be set to module_dim.
   :type decoder_input_dim: Optional[int]
   :param hidden_dim: Dimensionality of the hidden layers. Default is 64.
   :type hidden_dim: int
   :param n_modules: Number of modules. Default is 32.
   :type n_modules: int
   :param model_checkpoint: Model checkpoint to load. Default is None.
   :type model_checkpoint: Any
   :param edge_clip: Clip the adj edges to edge_clip. Default is 2.
   :type edge_clip: int
   :param logarithm_first: Whether to apply logarithm transformation before hvgs. Default is False.
   :type logarithm_first: bool
   :param variational: Whether to use variational inference. Default is False.
   :type variational: bool
   :param n_glayers: Number of graph convolutional layers. Default is 4.
   :type n_glayers: int
   :param hvg_method: Method to select highly variable genes. Default is "seurat_v3".
   :type hvg_method: str
   :param filtered: Whether the gene expression data (cells) are filtered. Default is False.
   :type filtered: bool
   :param \*\*kwargs: Additional keyword arguments.
   :type \*\*kwargs: Any

   :raises AssertionError: If neither adata nor file_path is provided.


   .. rubric:: Overview


   .. list-table:: Methods
      :header-rows: 0
      :widths: auto
      :class: summarytable

      * - :py:obj:`cluster <step.stmodel.stModel.cluster>`\ (adata, n_clusters, use_rep, key_added, method, seed)
        - Cluster the embedding of spatial transcriptomics.
      * - :py:obj:`sub_cluster <step.stmodel.stModel.sub_cluster>`\ (adata, n_clusters, use_rep, pre_key, key_added)
        - Sub-cluster the clusters of spatial transcriptomics.
      * - :py:obj:`summarize_domain <step.stmodel.stModel.summarize_domain>`\ (cell_type_names, adata, domain_key, average, obsm_key, figsize, show, save)
        - Summarize the domain of spatial transcriptomics.
      * - :py:obj:`summarize_single_domain <step.stmodel.stModel.summarize_single_domain>`\ (cell_type_names, adata, domain_key, obsm_key, figsize, show, save)
        - :summarylabel:`abc` \-
      * - :py:obj:`save <step.stmodel.stModel.save>`\ (path)
        - \-
      * - :py:obj:`load <step.stmodel.stModel.load>`\ (path, adata, filepath, config_name, model_name)
        - :summarylabel:`class` Load the model and the data.
      * - :py:obj:`spatial_plot <step.stmodel.stModel.spatial_plot>`\ (slide, with_images, \*\*kwargs)
        - Wrapper for plotting spatial feature plot with self-contained data.


   .. rubric:: Members

   .. py:method:: cluster(adata: anndata.AnnData | None = None, n_clusters=3, use_rep='X_smoothed', key_added='domain', method='kmeans', seed=None)

      Cluster the embedding of spatial transcriptomics.

      :param adata: Annotated data matrix with shape (n_obs, n_vars). If provided, it will be used to perform clustering, and the result will be added to adata.obs; otherwise, it will use the adata in the stModel object.
      :type adata: Optional[AnnData]
      :param n_clusters: Number of clusters. Default is 3.
      :type n_clusters: int
      :param use_rep: Key for the representation to use. If None, it will use the default representation.
      :type use_rep: Optional[str]
      :param key_added: Key to add to adata.obs. Default is "domain".
      :type key_added: str
      :param method: Clustering method. Default is "kmeans".
      :type method: str
      :param seed: Random seed. Default is None.
      :type seed: Optional[int]


   .. py:method:: sub_cluster(adata: Optional[anndata.AnnData], n_clusters=3, use_rep='X_smoothed', pre_key='domain', key_added='sub_domain')

      Sub-cluster the clusters of spatial transcriptomics.

      :param adata: Annotated data matrix with shape (n_obs, n_vars). If provided, it will be used to perform sub-clustering, and the result will be added to adata.obs; otherwise, it will use the adata in the stModel object.
      :type adata: Optional[AnnData]
      :param n_clusters: Number of clusters. Default is 3.
      :type n_clusters: int
      :param use_rep: Key for the representation to use. If None, it will use the default representation.
      :type use_rep: Optional[str]
      :param pre_key: Key for the pre-clustered clusters in adata.obs. Default is "domain".
      :type pre_key: str
      :param key_added: Key to add to adata.obs. Default is "sub_domain".
      :type key_added: str


   .. py:method:: summarize_domain(cell_type_names, adata: Optional[anndata.AnnData] = None, domain_key='domain', average=True, obsm_key='deconv', figsize=(15, 5), show=True, save=False)

      Summarize the domain of spatial transcriptomics.

      :param cell_type_names: List of cell type names.
      :type cell_type_names: Sequence[str]
      :param adata: Annotated data matrix with shape (n_obs, n_vars). If provided, it will be used to perform sub-clustering, and the result will be added to adata.obs; otherwise, it will use the adata in the stModel object.
      :type adata: Optional[AnnData]
      :param domain_key: Key for the domain information in adata.obs. Default is "domain".
      :type domain_key: str
      :param average: Whether to average the domain information. Default is True.
      :type average: bool
      :param obsm_key: Key for the deconvolution information in adata.obsm. Default is "deconv".
      :type obsm_key: str
      :param figsize: Figure size. Default is (15, 5).
      :type figsize: Tuple[int, int]
      :param show: Whether to show the plot. Default is True.
      :type show: bool
      :param save: Whether to save the plot. Default is False.
      :type save: bool


   .. py:method:: summarize_single_domain(cell_type_names, adata: Optional[anndata.AnnData] = None, domain_key='domain', obsm_key='deconv', figsize=(15, 5), show=True, save=True)
      :abstractmethod:


   .. py:method:: save(path: str | pathlib.Path = '.')


   .. py:method:: load(path: str, adata: Optional[anndata.AnnData] = None, filepath: Optional[str] = None, config_name: str = 'config.json', model_name: str = 'model.pth')
      :classmethod:

      Load the model and the data.

      :param path: The path to load the model and the dataset.
      :type path: str
      :param adata: Annotated data object containing the gene expression data.
      :type adata: Optional[AnnData]
      :param filepath: Path to a file containing the gene expression data.
      :type filepath: Optional[str]
      :param config_name: The name of the config file.
      :type config_name: str
      :param model_name: The name of the model file.
      :type model_name: str

      :returns: The scModel object.
      :rtype: scModel


   .. py:method:: spatial_plot(slide: str | int | None = None, with_images: bool = True, **kwargs)

      Wrapper for plotting spatial feature plot with self-contained data.

      :param slide: Slide name or index. Default is 0.
      :type slide: str | int | None
      :param with_images: Whether to plot based on images which uses scanpy.pl.spatial. Default is True.
      :type with_images: bool
      :param \*\*kwargs: Additional keyword arguments for scanpy.pl.spatial or scanpy,pl.embedding
      :type \*\*kwargs: Any

      :returns: Figure.
      :rtype: matplotlib.figure.Figure







