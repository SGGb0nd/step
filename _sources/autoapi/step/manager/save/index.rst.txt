
step.manager.save
=================

.. py:module:: step.manager.save


Overview
--------

.. list-table:: Classes
   :header-rows: 0
   :widths: auto
   :class: summarytable

   * - :py:obj:`Saver <step.manager.save.Saver>`
     - Save the model and the dataset.




Classes
-------

.. py:class:: Saver(class_name, path: str | pathlib.Path = '.')

   Save the model and the dataset.

   .. attribute:: funcmodel

      The functional model.

      :type: FunctionalBase

   .. attribute:: adata

      The AnnData object.

      :type: AnnData

   .. attribute:: dataset

      The dataset object.

      :type: BaseDataset

   Initialize the Saver.

   :param path: The path to save the model and the dataset.
   :type path: str | Path


   .. rubric:: Overview


   .. list-table:: Methods
      :header-rows: 0
      :widths: auto
      :class: summarytable

      * - :py:obj:`save <step.manager.save.Saver.save>`\ (funcmodel, adata, dataset)
        - \-
      * - :py:obj:`get_instance <step.manager.save.Saver.get_instance>`\ (class_name, path)
        - :summarylabel:`class` \-


   .. rubric:: Members

   .. py:method:: save(funcmodel: step.functionality.base.FunctionalBase, adata: anndata.AnnData, dataset: step.utils.dataset.BaseDataset)


   .. py:method:: get_instance(class_name, path='.')
      :classmethod:







