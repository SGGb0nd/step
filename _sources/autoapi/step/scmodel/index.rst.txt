:py:mod:`step.scmodel`
======================

.. py:module:: step.scmodel


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   step.scmodel.scModel




.. py:class:: scModel(adata: Optional[anndata.AnnData] = None, file_path: Optional[str] = None, n_top_genes: Optional[int] = 2000, geneset_to_use: Optional[Sequence[str]] = None, layer_key: Optional[str] = None, class_key: Optional[str] = None, batch_key: Optional[str] = None, log_transformed=False, module_dim=30, decoder_input_dim=None, hidden_dim=64, n_modules=32, model_checkpoint=None, beta=0.01, decoder_type='zinb', dispersion='batch-gene', logarithm_first=False, hvg_method='seurat_v3', filtered=False, device=None, **kwargs)


   scModel is the main class for single-cell RNA-seq data analysis.

   .. attribute:: adata

      Annotated data object containing the gene expression data.

   .. attribute:: dataset

      ScDataset object.

   .. attribute:: _functional

      scSingleBatch or scMultiBatchNrmls object.

   .. py:property:: adata


   .. py:property:: model


   .. py:method:: load_checkpoint(model_checkpoint, functional: Union[step.functionality.sc_funcmodel.scSingleBatch, step.functionality.sc_funcmodel.scMultiBatchNrmls])


   .. py:method:: save(path: str | pathlib.Path = '.')


   .. py:method:: load(path: str, adata: Optional[anndata.AnnData] = None, filepath: Optional[str] = None, config_name: str = 'config.json', model_name: str = 'model.pth')
      :classmethod:

      Load the model and the data.

      :param path: The path to load the model and the dataset.
      :type path: str
      :param adata: Annotated data object containing the gene expression data.
      :type adata: Optional[AnnData]
      :param filepath: Path to a file containing the gene expression data.
      :type filepath: Optional[str]
      :param config_name: The name of the config file.
      :type config_name: str
      :param model_name: The name of the model file.
      :type model_name: str

      :returns: The scModel object.
      :rtype: scModel



